name: CMake

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo

jobs:
  build-mdspan:
    runs-on: ubuntu-latest

    steps:

    - id: get-sha
      run: echo ::set-output name=sha::$( curl https://api.github.com/repos/kokkos/mdspan/git/ref/heads/stable | jq .object.sha | tr -d '"' )
 
    - name: Determine whether mdspan needs to be rebuilt
      id: cache-mdspan
      uses: actions/cache@v2
      with:
        path: ${{github.workspace}}/mdspan-install
        key: mdspan-${{ steps.get-sha.outputs.sha }}
 
    - name: Create Build Environment
      if: steps.cache-mdspan.outputs.cache-hit != 'true'
      run: cmake -E make_directory ${{github.workspace}}/mdspan-build
      
    - name: Check Out
      if: steps.cache-mdspan.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
      with:
        repository: kokkos/mdspan
        path: ${{github.workspace}}/mdspan-src
      
    - name: Configure CMake
      if: steps.cache-mdspan.outputs.cache-hit != 'true'
      shell: bash
      working-directory: ${{github.workspace}}/mdspan-build
      run: cmake $GITHUB_WORKSPACE/mdspan-src -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/mdspan-install
      
    - name: Build
      if: steps.cache-mdspan.outputs.cache-hit != 'true'
      shell: bash
      working-directory: ${{github.workspace}}/mdspan-build
      run: make
      
    - name: Install
      if: steps.cache-mdspan.outputs.cache-hit != 'true'
      shell: bash
      working-directory: ${{github.workspace}}/mdspan-build
      run: make install
      
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: mdspan
        path: ${{github.workspace}}/mdspan-install

  build-gtest:
    runs-on: ubuntu-latest
    
    steps:

    - id: get-sha
      run: echo ::set-output name=sha::$( curl https://api.github.com/repos/google/googletest/git/ref/heads/master | jq .object.sha | tr -d '"' )
 
    - name: Determine whether gtest needs to be rebuilt
      id: cache-gtest
      uses: actions/cache@v2
      with:
        path: ${{github.workspace}}/gtest-install
        key: gtest-${{ steps.get-sha.outputs.sha }}
 
    - name: Create Build Environment
      if: steps.cache-gtest.outputs.cache-hit != 'true'
      run: cmake -E make_directory ${{github.workspace}}/gtest-build
      
    - name: Check Out
      if: steps.cache-gtest.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
      with:
        repository: google/googletest
        path: ${{github.workspace}}/gtest-src
      
    - name: Configure CMake
      if: steps.cache-gtest.outputs.cache-hit != 'true'
      shell: bash
      working-directory: ${{github.workspace}}/gtest-build
      run: cmake $GITHUB_WORKSPACE/gtest-src -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/gtest-install
      
    - name: Build
      if: steps.cache-gtest.outputs.cache-hit != 'true'
      shell: bash
      working-directory: ${{github.workspace}}/gtest-build
      run: make
      
    - name: Install
      if: steps.cache-gtest.outputs.cache-hit != 'true'
      shell: bash
      working-directory: ${{github.workspace}}/gtest-build
      run: make install
      
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: gtest
        path: ${{github.workspace}}/gtest-install

  configure-stdblas:
    runs-on: ubuntu-latest
    needs: [build-mdspan, build-gtest]
    
    steps:
    - name: Download mdspan
      uses: actions/download-artifact@v2
      with:
        name: mdspan
        path: ${{github.workspace}}/mdspan-install 

    - name: Download googletest
      uses: actions/download-artifact@v2
      with:
        name: gtest
        path: ${{github.workspace}}/gtest-install 
        
    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/stdblas-build
        
    - name: Check Out
      uses: actions/checkout@v2
      with:
        path: ${{github.workspace}}/stdblas-src
        
    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/stdblas-build
      run: cmake $GITHUB_WORKSPACE/stdblas-src -Dmdspan_DIR=$GITHUB_WORKSPACE/mdspan-install/lib/cmake/mdspan -DGTEST_ROOT=$GITHUB_WORKSPACE/gtest-install -DLINALG_ENABLE_TESTS=On -DLINALG_ENABLE_EXAMPLES=On -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/stdblas-install

    - name: Upload workspace
      uses: actions/upload-artifact@v2
      with:
        name: workspace
        path: ${{github.workspace}}
      
  build-stdblas:
    runs-on: ubuntu-latest
    needs: configure-stdblas
    
    steps:
    
    - name: Download workspace
      uses: actions/download-artifact@v2
      with:
        name: workspace
        path: ${{github.workspace}}
        
    - name: Build
      working-directory: ${{github.workspace}}/stdblas-build
      shell: bash
      run: make
      
    - name: Tar files
      working-directory: ${{github.workspace}}
      shell: bash
      run: tar -cvf stdblas.tar *

    - name: Upload workspace
      uses: actions/upload-artifact@v2
      with:
        name: stdblas
        path: ${{github.workspace}}/stdblas.tar
        
  test-stdBLAS:
    runs-on: ubuntu-latest
    needs: build-stdblas
    
    steps:
    
    - name: Download workspace
      uses: actions/download-artifact@v2
      with:
        name: stdblas
        path: ${{github.workspace}}
        
    - name: Untar files
      working-directory: ${{github.workspace}}
      shell: bash
      run: tar -xvf stdblas.tar
        
    - name: Test
      working-directory: ${{github.workspace}}/stdblas-build
      shell: bash
      run: ctest --output-on-failure
      
  install-stdBLAS:
    runs-on: ubuntu-latest
    needs: build-stdblas
    
    steps:
    
    - name: Download workspace
      uses: actions/download-artifact@v2
      with:
        name: stdblas
        path: ${{github.workspace}}
        
    - name: Untar files
      working-directory: ${{github.workspace}}
      shell: bash
      run: tar -xvf stdblas.tar
        
    - name: Install
      working-directory: ${{github.workspace}}/stdblas-build
      shell: bash
      run: make install
